let     g:CursorTab = [[-1, -1]][0:1024]
let     g:CursorId = [-1][0:1024]
let     g:CursorNbr = 11

hi      CursorColor ctermbg=255 ctermfg=93

fu!     Add_new_cursor(posX, posY)
	let		line = getline(".")
	let		char = line[col(".")-1]
	let		nodelete = 0
	if char == '+'
		let	nodelete = 1
		let g:CursorNbr = g:CursorNbr + 1
	endif
	if char == '-'
		let g:CursorNbr = g:CursorNbr - 1
		call Delete_Cursor()
	endif
	if g:CursorNbr >= 1
		if g:CursorTab[0][0] == -1 && g:CursorTab[0][1] == -1
			call remove(g:CursorTab, 0, 0)
		endif
	endif
	call insert(g:CursorTab, [a:posX, a:posY])
	call Write_Cursor(a:posX, a:posY)
	if !nodelete
		call Delete_Cursor()
	endif
endf

fu!     Write_Cursor(posX, posY)
	if a:posX != -1 && a:posY != -1
		let match = '\%' . a:posX . 'c\%' . a:posY . 'l'
		call add(g:CursorId, matchadd('CursorColor', match, -1))
	endif
endf

fu!     Write_char_pos(char, posX, posY)
	let match = '\%'.a:posX.'c'
	echom match
	call substitute(a:posY, match, a:char, "")
endf

fu!		Delete_Cursor()
	if len(g:CursorId) > g:CursorNbr && g:CursorNbr >= 1
		call remove(g:CursorId,0)
		call matchdelete(g:CursorId[0])
	endif
endf

"""""""Function Mapping:""""""""
imap    <C-c> <ESC>:call Add_new_cursor(col(".") + 1, line("."))<RETURN>a
""""""""""""""""""""""""""""""""

""""""""Autocmds:"""""""
if has("autocmd")
	au BufRead,CursorMoved,CursorMovedI * call Add_new_cursor(col("."), line("."))
endif
""""""""""""""""""""""""
